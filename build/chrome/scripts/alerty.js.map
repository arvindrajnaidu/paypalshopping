{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/scripts/alerty.js"],"names":[],"mappings":"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","file":"alerty.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/*!\n * alerty v0.0.1 (https://github.com/undead25/alerty#readme)\n * Copyright 2016 undead25\n * Licensed under the MIT license\n */\n(function () {\n  'use strict';\n\n  // common function which is often using\n  var commonUse = {\n    /**\n     * [Add class to element]\n     *\n     * @param el {Object}   -- element.\n     * @param cls {String}  -- classes.\n     */\n    addClass: function(el, cls) {\n      var elClass = el.className;\n      var blank = (elClass !== '') ? ' ' : '';\n      var added = elClass + blank + cls;\n      el.className = added;\n    },\n\n    /**\n     * [Remove class from element]\n     *\n     * @param el {Object}   -- element.\n     * @param cls {String}  -- classes.\n     */\n    removeClass: function(el, cls) {\n      var elClass = ' '+el.className+' ';\n      elClass = elClass.replace(/(\\s+)/gi, ' ');\n      var removed = elClass.replace(' '+cls+' ', ' ');\n      removed = removed.replace(/(^\\s+)|(\\s+$)/g, '');\n      el.className = removed;\n    },\n\n    /**\n     * [if element has some class]\n     *\n     * @param el {Object}   -- element.\n     * @param cls {String}  -- classes.\n     *\n     * @return  {Boolean}   -- true or false.\n     */\n    hasClass: function(el, cls) {\n      var elClass = el.className;\n      var elClassList = elClass.split(/\\s+/);\n      var x = 0;\n      for(x in elClassList) {\n        if(elClassList[x] == cls) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * [add event to some element, dom0, dom1, supports fuck ie]\n     *\n     * @param el {Object}       -- element.\n     * @param type {String}     -- event type, such as 'click', 'mouseover'.\n     * @param func {Function}   -- function.\n     *\n     */\n    addEvent: function(el, type, func) {\n      if(el.addEventListener) {\n        el.addEventListener(type, func, false);\n      } else if(el.attachEvent){ \n        el.attachEvent('on' + type, func);\n      } else{ \n        el['on' + type] = func; \n      }  \n    },\n\n    /**\n     * [remove event to some element, dom0, dom1, supports fuck ie]\n     *\n     * @param el {Object}       -- element.\n     * @param type {String}     -- event type, such as 'click', 'mouseover'.\n     * @param func {Function}   -- function.\n     *\n     */\n    removeEvent: function(el, type, func) {\n      if (el.removeEventListener){ \n        el.removeEventListener(type, func, false);\n      } else if (el.detachEvent){\n        el.detachEvent('on' + type, func);\n      } else {\n        delete el['on' + type];\n      }\n    },\n\n    /**\n     * [Remove element node]\n     *\n     * @param el {Object}   -- element.\n     *\n     */\n    removeElement: function(el) {\n      (el && el.parentNode) && el.parentNode.removeChild(el);\n    },\n\n    /**\n     * [Set unique id]\n     *\n     * @param prefix {String}   -- id prefix name.\n     *\n     * @return  {String}\n     */\n    setUid: function(prefix) {\n      do prefix += Math.floor(Math.random() * 1000000);\n      while (document.getElementById(prefix));\n      return prefix;\n    }\n  };\n\n  /**\n   * [Alertiy public API]\n   *\n   * @return {Object}\n   */\n  var Alerty = function() {\n\n    // private object for Alerty object inherit\n    var Dialog = {\n      \n      // static defaults params\n      defaults: {\n        okLabel: '\\u786e\\u5b9a',\n        cancelLabel: '\\u53d6\\u6d88',\n        time: 2000\n      },\n\n      previousCallback: null,  // for cache previous toasts callbak, to handle if call more than 1 alerty\n\n      // html templates\n      template: '<div class=\"alerty-overlay\" tabindex=\"-1\"></div>'+\n                '<div class=\"alerty\">'+\n                  '<div class=\"alerty-title\"></div>'+\n                  '<div class=\"alerty-content\">'+\n                    '<p class=\"alerty-message\"></p>'+\n                    '<div class=\"alerty-prompt\">'+\n                      '<input type=\"text\" placeholder=\"\" value=\"\">'+\n                      '<div class=\"input-line\"></div>'+\n                    '</div>'+\n                  '</div>'+\n                  '<div class=\"alerty-action\">'+\n                    '<a class=\"btn-cancel\"></a>'+\n                    '<a class=\"btn-ok\"></a>'+\n                  '</div>'+\n                '</div>',\n\n\n\n      /** \n       * [Build the HTML contents]\n       *\n       * @param type {String}           -- get the dialog type to arrange the correspondent html content.\n       * @param content {String}        -- the text contents dialog to users.\n       * @param opts {Object}           -- options.\n       * @param onOk {Function}         -- custom callback function after click ok button.\n       * @param onCancel {Function}     -- custom callback function after click cancel button.\n       */\n      setup: function(type, content, opts, onOk, onCancel) {\n        // for if argument opts is not given.\n        var detect = typeof opts === 'function';\n        if (detect) {\n          onCancel = onOk;\n          onOk = opts;\n        }\n\n        var $oldModal = document.querySelector('.alerty');\n\n\n        // if previous modal is open, remove it and immediately callback\n        if ($oldModal) {\n          commonUse.removeElement($oldModal);\n          var _callback = this.previousCallback;\n          if (_callback) _callback();\n        }\n\n        var $wrapper = document.createElement('div');\n        $wrapper.innerHTML = this.template;\n\n        // append alerty to body\n        while ($wrapper.firstChild) {\n          document.body.appendChild($wrapper.firstChild);\n        }\n\n        // cache alerty dom for next use\n        var $modal = document.querySelector('.alerty');\n        var $overlay = document.querySelector('.alerty-overlay');\n        var $title = $modal.querySelector('.alerty-title');\n        var $message = $modal.querySelector('.alerty-message');\n        var $btnArea = $modal.querySelector('.alerty-action');\n        var $btnOk = $modal.querySelector('.btn-ok');\n        var $btnCancel = $modal.querySelector('.btn-cancel');\n        var $prompt = $modal.querySelector('.alerty-prompt');\n        var $input = $prompt.querySelector('input');\n\n        // set uid\n        $modal.id = commonUse.setUid('alerty');\n        $overlay.id = 'overlay-'+$modal.id;\n\n        // animation show alerty\n        commonUse.addClass($overlay, 'active');\n        commonUse.addClass($modal, 'alerty-show');\n        $message.innerHTML = content;  // set msg\n\n        if (opts && opts.time) this.defaults.time = opts.time; // handle time if set\n\n        if (type !== 'prompt') {\n          commonUse.removeElement($prompt); // other type do not need\n        } else {\n          $input.focus(); // auto focus input if type prompt\n\n          if(opts && opts.inputType) $input.setAttribute('type', opts.inputType); // handle input type, such as 'password'\n          if(opts && opts.inputPlaceholder) $input.setAttribute('placeholder', opts.inputPlaceholder); // handle input placeholder\n          if(opts && opts.inputValue) $input.setAttribute('value', opts.inputValue); // handle input default value \n        }\n\n        if (type === 'toasts') {\n          this.previousCallback = onOk;  // cache callback\n\n          // rearrange template\n          commonUse.removeElement($title);\n          commonUse.removeElement($btnArea);\n          commonUse.removeElement($overlay);\n          commonUse.addClass($modal, 'toasts');\n\n          if (opts && opts.place === 'top') commonUse.addClass($modal, 'place-top'); // handle toasts top place\n          if (opts && opts.bgColor) $modal.style.backgroundColor = opts.bgColor;\n          if (opts && opts.fontColor) $message.style.color =opts.fontColor;\n\n        } else {\n          commonUse.addClass(document.body, 'no-scrolling'); // body no scorll\n          (opts && opts.title) ? $title.innerHTML = opts.title : commonUse.removeElement($title); // handle title if set\n          (opts && opts.okLabel) ? $btnOk.innerHTML = opts.okLabel : $btnOk.innerHTML = this.defaults.okLabel; // handle ok text if set\n          $modal.style.marginTop =  - $modal.offsetHeight / 2 + 'px'; // set the place to center using margin-top;\n\n          if (type === 'confirm' || type === 'prompt') {\n            (opts && opts.cancelLabel) ? $btnCancel.innerHTML = opts.cancelLabel : $btnCancel.innerHTML = this.defaults.cancelLabel; // handle cancel text if set\n          } else {\n            commonUse.removeElement($btnCancel); // toasts and alery type do not need cancel btn\n          }\n        }\n\n        this.bindEvent($modal, onOk, onCancel); // see next\n      },\n\n      /** \n       * [Bind event to dialog]\n       *\n       * @param $modal {Object}       -- modal node.\n       * @param: onOk {Function}      -- ok callback.\n       * @param: onCancel {Function}  -- cancel callback.\n       */\n      bindEvent: function($modal, onOk, onCancel) {\n        var that = this;\n        var $btnOk = $modal.querySelector('.btn-ok');\n        var $btnCancel = $modal.querySelector('.btn-cancel');\n\n        // toasts delay hide\n        if (commonUse.hasClass($modal, 'toasts')) {\n          setTimeout(function() {\n            // if toasts has been removed\n            if (document.getElementById($modal.id) === null) return;\n            that.close($modal, onOk);\n          }, that.defaults.time);\n        }\n        // click ok button\n        if ($btnOk) {\n          commonUse.addEvent($btnOk, 'click', function() {\n            that.close($modal, onOk);\n          });\n        }\n        // click cancel button\n        if ($btnCancel) {\n          commonUse.addEvent($btnCancel, 'click', function() {\n            that.close($modal, onCancel);\n          });\n        }\n      },\n\n      /** \n       * [Close the actived modal and remove it]\n       *\n       * @param: $modal {Obejct}  -- modal element to remove.\n       * @param: callback {Function}  -- callback function.\n       */\n      close: function($modal, callback) {\n        var $input = $modal.querySelector('input');\n        var $overlay = document.getElementById('overlay-'+$modal.id);\n\n        // hide alerty with animation\n        commonUse.removeClass($modal, 'alerty-show');\n        commonUse.addClass($modal, 'alerty-hide');\n\n        // remove alerty and other added elements\n        setTimeout(function(){\n          $overlay && commonUse.removeClass($overlay, 'active'), commonUse.removeClass(document.body, 'no-scrolling');\n          \n          commonUse.removeElement($modal);\n          commonUse.removeElement($overlay);\n          if (callback) {\n            setTimeout(function(){\n              !$input ? callback() : callback($input.value);  // handle prompt type, callback the input value\n            }, 100);\n          }\n        },100);\n      }\n    };\n\n    return {\n      // return alerty.toasts();\n      toasts: function(content, opts, callback) {\n        Dialog.setup('toasts', content, opts, callback);\n      },\n\n      // return alerty.alert();\n      alert: function(content, opts, onOk) {\n        Dialog.setup('alert', content, opts, onOk);\n      },\n\n      // return alerty.confirm();\n      confirm: function(content, opts, onOk, onCancel) {\n        Dialog.setup('confirm', content, opts, onOk, onCancel);\n      },\n\n      // return alerty.prompt();\n      prompt: function(content, opts, onOk, oncancel) {\n        Dialog.setup('prompt', content, opts, onOk, oncancel);\n      }\n    };\n  };\n\n  window.alerty = new Alerty();\n\n}());"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}