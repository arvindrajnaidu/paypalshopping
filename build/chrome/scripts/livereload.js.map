{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/scripts/livereload.js","src/scripts/utils/ext.js"],"names":[],"mappings":"AAAA;ACAA;;AAEA;;;;;;AAEA,IAAI,kBAAkB,YAAtB;AACA,IAAI,kBAAkB,KAAtB;AACA,IAAI,aAAa,IAAI,SAAJ,CAAc,UAAU,eAAV,GAA4B,eAA5B,GAA8C,aAA5D,CAAjB;;AAEA,WAAW,OAAX,GAAqB,UAAU,KAAV,EAAiB;AACpC,UAAQ,GAAR,CAAY,8BAAZ,EAA4C,KAA5C;AACD,CAFD;;AAIA,WAAW,SAAX,GAAuB,UAAU,CAAV,EAAa;AAClC,MAAI,EAAE,IAAN,EAAY;AACV,QAAI,OAAO,KAAK,KAAL,CAAW,EAAE,IAAb,CAAX;AACA,QAAI,QAAQ,KAAK,OAAL,KAAiB,QAA7B,EAAuC;AACrC,oBAAI,OAAJ,CAAY,MAAZ;AACD;AACF;AACF,CAPD;;;;;ACZA,IAAM,OAAO,CACX,QADW,EAEX,WAFW,EAGX,eAHW,EAIX,UAJW,EAKX,cALW,EAMX,SANW,EAOX,WAPW,EAQX,QARW,EASX,WATW,EAUX,gBAVW,EAWX,SAXW,EAYX,MAZW,EAaX,MAbW,EAcX,eAdW,EAeX,YAfW,EAgBX,SAhBW,EAiBX,SAjBW,EAkBX,MAlBW,EAmBX,eAnBW,EAoBX,YApBW,EAqBX,SArBW,CAAb;;AAwBA,SAAS,SAAT,GAAsB;AACpB,MAAM,QAAQ,IAAd;;AAEA,OAAK,OAAL,CAAa,UAAU,GAAV,EAAe;;AAE1B,UAAM,GAAN,IAAa,IAAb;;AAEA,QAAI;AACF,UAAI,OAAO,GAAP,CAAJ,EAAiB;AACf,cAAM,GAAN,IAAa,OAAO,GAAP,CAAb;AACD;AACF,KAJD,CAIE,OAAO,CAAP,EAAU,CAAE;;AAEd,QAAI;AACF,UAAI,OAAO,GAAP,CAAJ,EAAiB;AACf,cAAM,GAAN,IAAa,OAAO,GAAP,CAAb;AACD;AACF,KAJD,CAIE,OAAO,CAAP,EAAU,CAAE;;AAEd,QAAI;AACF,UAAI,QAAQ,GAAR,CAAJ,EAAkB;AAChB,cAAM,GAAN,IAAa,QAAQ,GAAR,CAAb;AACD;AACF,KAJD,CAIE,OAAO,CAAP,EAAU,CAAE;AACd,QAAI;AACF,YAAM,GAAN,GAAY,QAAQ,SAAR,CAAkB,GAAlB,CAAZ;AACD,KAFD,CAEE,OAAO,CAAP,EAAU,CAAE;AACf,GAxBD;;AA0BA,MAAI;AACF,QAAI,WAAW,QAAQ,OAAvB,EAAgC;AAC9B,WAAK,OAAL,GAAe,QAAQ,OAAvB;AACD;AACF,GAJD,CAIE,OAAO,CAAP,EAAU,CAAE;;AAEd,MAAI;AACF,QAAI,WAAW,QAAQ,aAAvB,EAAsC;AACpC,WAAK,aAAL,GAAqB,QAAQ,aAA7B;AACD;AACF,GAJD,CAIE,OAAO,CAAP,EAAU,CAAE;AAEf;;AAED,OAAO,OAAP,GAAiB,IAAI,SAAJ,EAAjB","file":"livereload.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","'use strict';\n\nimport ext from \"./utils/ext\";\n\nvar LIVERELOAD_HOST = 'localhost:';\nvar LIVERELOAD_PORT = 35729;\nvar connection = new WebSocket('ws://' + LIVERELOAD_HOST + LIVERELOAD_PORT + '/livereload');\n\nconnection.onerror = function (error) {\n  console.log('reload connection got error:', error);\n};\n\nconnection.onmessage = function (e) {\n  if (e.data) {\n    var data = JSON.parse(e.data);\n    if (data && data.command === 'reload') {\n      ext.runtime.reload();\n    }\n  }\n};","const apis = [\n  'alarms',\n  'bookmarks',\n  'browserAction',\n  'commands',\n  'contextMenus',\n  'cookies',\n  'downloads',\n  'events',\n  'extension',\n  'extensionTypes',\n  'history',\n  'i18n',\n  'idle',\n  'notifications',\n  'pageAction',\n  'runtime',\n  'storage',\n  'tabs',\n  'webNavigation',\n  'webRequest',\n  'windows',\n]\n\nfunction Extension () {\n  const _this = this\n\n  apis.forEach(function (api) {\n\n    _this[api] = null\n\n    try {\n      if (chrome[api]) {\n        _this[api] = chrome[api]\n      }\n    } catch (e) {}\n\n    try {\n      if (window[api]) {\n        _this[api] = window[api]\n      }\n    } catch (e) {}\n\n    try {\n      if (browser[api]) {\n        _this[api] = browser[api]\n      }\n    } catch (e) {}\n    try {\n      _this.api = browser.extension[api]\n    } catch (e) {}\n  })\n\n  try {\n    if (browser && browser.runtime) {\n      this.runtime = browser.runtime\n    }\n  } catch (e) {}\n\n  try {\n    if (browser && browser.browserAction) {\n      this.browserAction = browser.browserAction\n    }\n  } catch (e) {}\n\n}\n\nmodule.exports = new Extension();"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvc2NyaXB0cy9saXZlcmVsb2FkLmpzIiwic3JjL3NjcmlwdHMvdXRpbHMvZXh0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FDQUE7O0FBRUE7Ozs7OztBQUVBLElBQUksa0JBQWtCLFlBQXRCO0FBQ0EsSUFBSSxrQkFBa0IsS0FBdEI7QUFDQSxJQUFJLGFBQWEsSUFBSSxTQUFKLENBQWMsVUFBVSxlQUFWLEdBQTRCLGVBQTVCLEdBQThDLGFBQTVELENBQWpCOztBQUVBLFdBQVcsT0FBWCxHQUFxQixVQUFVLEtBQVYsRUFBaUI7QUFDcEMsVUFBUSxHQUFSLENBQVksOEJBQVosRUFBNEMsS0FBNUM7QUFDRCxDQUZEOztBQUlBLFdBQVcsU0FBWCxHQUF1QixVQUFVLENBQVYsRUFBYTtBQUNsQyxNQUFJLEVBQUUsSUFBTixFQUFZO0FBQ1YsUUFBSSxPQUFPLEtBQUssS0FBTCxDQUFXLEVBQUUsSUFBYixDQUFYO0FBQ0EsUUFBSSxRQUFRLEtBQUssT0FBTCxLQUFpQixRQUE3QixFQUF1QztBQUNyQyxvQkFBSSxPQUFKLENBQVksTUFBWjtBQUNEO0FBQ0Y7QUFDRixDQVBEOzs7OztBQ1pBLElBQU0sT0FBTyxDQUNYLFFBRFcsRUFFWCxXQUZXLEVBR1gsZUFIVyxFQUlYLFVBSlcsRUFLWCxjQUxXLEVBTVgsU0FOVyxFQU9YLFdBUFcsRUFRWCxRQVJXLEVBU1gsV0FUVyxFQVVYLGdCQVZXLEVBV1gsU0FYVyxFQVlYLE1BWlcsRUFhWCxNQWJXLEVBY1gsZUFkVyxFQWVYLFlBZlcsRUFnQlgsU0FoQlcsRUFpQlgsU0FqQlcsRUFrQlgsTUFsQlcsRUFtQlgsZUFuQlcsRUFvQlgsWUFwQlcsRUFxQlgsU0FyQlcsQ0FBYjs7QUF3QkEsU0FBUyxTQUFULEdBQXNCO0FBQ3BCLE1BQU0sUUFBUSxJQUFkOztBQUVBLE9BQUssT0FBTCxDQUFhLFVBQVUsR0FBVixFQUFlOztBQUUxQixVQUFNLEdBQU4sSUFBYSxJQUFiOztBQUVBLFFBQUk7QUFDRixVQUFJLE9BQU8sR0FBUCxDQUFKLEVBQWlCO0FBQ2YsY0FBTSxHQUFOLElBQWEsT0FBTyxHQUFQLENBQWI7QUFDRDtBQUNGLEtBSkQsQ0FJRSxPQUFPLENBQVAsRUFBVSxDQUFFOztBQUVkLFFBQUk7QUFDRixVQUFJLE9BQU8sR0FBUCxDQUFKLEVBQWlCO0FBQ2YsY0FBTSxHQUFOLElBQWEsT0FBTyxHQUFQLENBQWI7QUFDRDtBQUNGLEtBSkQsQ0FJRSxPQUFPLENBQVAsRUFBVSxDQUFFOztBQUVkLFFBQUk7QUFDRixVQUFJLFFBQVEsR0FBUixDQUFKLEVBQWtCO0FBQ2hCLGNBQU0sR0FBTixJQUFhLFFBQVEsR0FBUixDQUFiO0FBQ0Q7QUFDRixLQUpELENBSUUsT0FBTyxDQUFQLEVBQVUsQ0FBRTtBQUNkLFFBQUk7QUFDRixZQUFNLEdBQU4sR0FBWSxRQUFRLFNBQVIsQ0FBa0IsR0FBbEIsQ0FBWjtBQUNELEtBRkQsQ0FFRSxPQUFPLENBQVAsRUFBVSxDQUFFO0FBQ2YsR0F4QkQ7O0FBMEJBLE1BQUk7QUFDRixRQUFJLFdBQVcsUUFBUSxPQUF2QixFQUFnQztBQUM5QixXQUFLLE9BQUwsR0FBZSxRQUFRLE9BQXZCO0FBQ0Q7QUFDRixHQUpELENBSUUsT0FBTyxDQUFQLEVBQVUsQ0FBRTs7QUFFZCxNQUFJO0FBQ0YsUUFBSSxXQUFXLFFBQVEsYUFBdkIsRUFBc0M7QUFDcEMsV0FBSyxhQUFMLEdBQXFCLFFBQVEsYUFBN0I7QUFDRDtBQUNGLEdBSkQsQ0FJRSxPQUFPLENBQVAsRUFBVSxDQUFFO0FBRWY7O0FBRUQsT0FBTyxPQUFQLEdBQWlCLElBQUksU0FBSixFQUFqQiIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gcihlLG4sdCl7ZnVuY3Rpb24gbyhpLGYpe2lmKCFuW2ldKXtpZighZVtpXSl7dmFyIGM9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighZiYmYylyZXR1cm4gYyhpLCEwKTtpZih1KXJldHVybiB1KGksITApO3ZhciBhPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIraStcIidcIik7dGhyb3cgYS5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGF9dmFyIHA9bltpXT17ZXhwb3J0czp7fX07ZVtpXVswXS5jYWxsKHAuZXhwb3J0cyxmdW5jdGlvbihyKXt2YXIgbj1lW2ldWzFdW3JdO3JldHVybiBvKG58fHIpfSxwLHAuZXhwb3J0cyxyLGUsbix0KX1yZXR1cm4gbltpXS5leHBvcnRzfWZvcih2YXIgdT1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlLGk9MDtpPHQubGVuZ3RoO2krKylvKHRbaV0pO3JldHVybiBvfXJldHVybiByfSkoKSIsIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IGV4dCBmcm9tIFwiLi91dGlscy9leHRcIjtcblxudmFyIExJVkVSRUxPQURfSE9TVCA9ICdsb2NhbGhvc3Q6JztcbnZhciBMSVZFUkVMT0FEX1BPUlQgPSAzNTcyOTtcbnZhciBjb25uZWN0aW9uID0gbmV3IFdlYlNvY2tldCgnd3M6Ly8nICsgTElWRVJFTE9BRF9IT1NUICsgTElWRVJFTE9BRF9QT1JUICsgJy9saXZlcmVsb2FkJyk7XG5cbmNvbm5lY3Rpb24ub25lcnJvciA9IGZ1bmN0aW9uIChlcnJvcikge1xuICBjb25zb2xlLmxvZygncmVsb2FkIGNvbm5lY3Rpb24gZ290IGVycm9yOicsIGVycm9yKTtcbn07XG5cbmNvbm5lY3Rpb24ub25tZXNzYWdlID0gZnVuY3Rpb24gKGUpIHtcbiAgaWYgKGUuZGF0YSkge1xuICAgIHZhciBkYXRhID0gSlNPTi5wYXJzZShlLmRhdGEpO1xuICAgIGlmIChkYXRhICYmIGRhdGEuY29tbWFuZCA9PT0gJ3JlbG9hZCcpIHtcbiAgICAgIGV4dC5ydW50aW1lLnJlbG9hZCgpO1xuICAgIH1cbiAgfVxufTsiLCJjb25zdCBhcGlzID0gW1xuICAnYWxhcm1zJyxcbiAgJ2Jvb2ttYXJrcycsXG4gICdicm93c2VyQWN0aW9uJyxcbiAgJ2NvbW1hbmRzJyxcbiAgJ2NvbnRleHRNZW51cycsXG4gICdjb29raWVzJyxcbiAgJ2Rvd25sb2FkcycsXG4gICdldmVudHMnLFxuICAnZXh0ZW5zaW9uJyxcbiAgJ2V4dGVuc2lvblR5cGVzJyxcbiAgJ2hpc3RvcnknLFxuICAnaTE4bicsXG4gICdpZGxlJyxcbiAgJ25vdGlmaWNhdGlvbnMnLFxuICAncGFnZUFjdGlvbicsXG4gICdydW50aW1lJyxcbiAgJ3N0b3JhZ2UnLFxuICAndGFicycsXG4gICd3ZWJOYXZpZ2F0aW9uJyxcbiAgJ3dlYlJlcXVlc3QnLFxuICAnd2luZG93cycsXG5dXG5cbmZ1bmN0aW9uIEV4dGVuc2lvbiAoKSB7XG4gIGNvbnN0IF90aGlzID0gdGhpc1xuXG4gIGFwaXMuZm9yRWFjaChmdW5jdGlvbiAoYXBpKSB7XG5cbiAgICBfdGhpc1thcGldID0gbnVsbFxuXG4gICAgdHJ5IHtcbiAgICAgIGlmIChjaHJvbWVbYXBpXSkge1xuICAgICAgICBfdGhpc1thcGldID0gY2hyb21lW2FwaV1cbiAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7fVxuXG4gICAgdHJ5IHtcbiAgICAgIGlmICh3aW5kb3dbYXBpXSkge1xuICAgICAgICBfdGhpc1thcGldID0gd2luZG93W2FwaV1cbiAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7fVxuXG4gICAgdHJ5IHtcbiAgICAgIGlmIChicm93c2VyW2FwaV0pIHtcbiAgICAgICAgX3RoaXNbYXBpXSA9IGJyb3dzZXJbYXBpXVxuICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgdHJ5IHtcbiAgICAgIF90aGlzLmFwaSA9IGJyb3dzZXIuZXh0ZW5zaW9uW2FwaV1cbiAgICB9IGNhdGNoIChlKSB7fVxuICB9KVxuXG4gIHRyeSB7XG4gICAgaWYgKGJyb3dzZXIgJiYgYnJvd3Nlci5ydW50aW1lKSB7XG4gICAgICB0aGlzLnJ1bnRpbWUgPSBicm93c2VyLnJ1bnRpbWVcbiAgICB9XG4gIH0gY2F0Y2ggKGUpIHt9XG5cbiAgdHJ5IHtcbiAgICBpZiAoYnJvd3NlciAmJiBicm93c2VyLmJyb3dzZXJBY3Rpb24pIHtcbiAgICAgIHRoaXMuYnJvd3NlckFjdGlvbiA9IGJyb3dzZXIuYnJvd3NlckFjdGlvblxuICAgIH1cbiAgfSBjYXRjaCAoZSkge31cblxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG5ldyBFeHRlbnNpb24oKTsiXX0="}